// custom bootstrap code 
@256
D=A
@SP
M=D
//call sys.init 0
@sys.init$ret.1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@0
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@sys.init
0;JMP
(sys.init$ret.1)

//function class1.set 0
(class1.set)
@0
D=A
@R14
M=D
(LOOP_class1.set)
@R14
D=M
@END_LOOP_class1.set
D;JLE
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R14
M=M-1 //n--
@LOOP_class1.set
0;JMP
(END_LOOP_class1.set)

// C_PUSH argument 0 
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1

// C_POP static 0 
@0
D=A
@16
A=D+M
D=A
@R15
M=D
@SP
M=M-1
A=M
D=M
@R15
A=M
M=D

// C_PUSH argument 1 
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1

// C_POP static 1 
@1
D=A
@16
A=D+M
D=A
@R15
M=D
@SP
M=M-1
A=M
D=M
@R15
A=M
M=D

// C_PUSH constant 0 
@0
D=A
@SP
A=M
M=D
@SP
M=M+1

//return
@LCL
D=M
@R13
M=D
@5
D=A
@R13
D=M-D
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@1
D=A
@R13
D=M-D
A=D
D=M
@THAT
M=D
@2
D=A
@R13
D=M-D
A=D
D=M
@THIS
M=D
@3
D=A
@R13
D=M-D
A=D
D=M
@ARG
M=D
@4
D=A
@R13
D=M-D
A=D
D=M
@LCL
M=D
@R14
A=M
A=M
0;JMP

//function class1.get 0
(class1.get)
@0
D=A
@R14
M=D
(LOOP_class1.get)
@R14
D=M
@END_LOOP_class1.get
D;JLE
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R14
M=M-1 //n--
@LOOP_class1.get
0;JMP
(END_LOOP_class1.get)

// C_PUSH static 0 
@0
D=A
@16
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1

// C_PUSH static 1 
@1
D=A
@16
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1

// sub 
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
D=D-M
@SP
A=M
M=D
@SP
M=M+1

//return
@LCL
D=M
@R13
M=D
@5
D=A
@R13
D=M-D
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@1
D=A
@R13
D=M-D
A=D
D=M
@THAT
M=D
@2
D=A
@R13
D=M-D
A=D
D=M
@THIS
M=D
@3
D=A
@R13
D=M-D
A=D
D=M
@ARG
M=D
@4
D=A
@R13
D=M-D
A=D
D=M
@LCL
M=D
@R14
A=M
A=M
0;JMP

//function class2.set 0
(class2.set)
@0
D=A
@R14
M=D
(LOOP_class2.set)
@R14
D=M
@END_LOOP_class2.set
D;JLE
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R14
M=M-1 //n--
@LOOP_class2.set
0;JMP
(END_LOOP_class2.set)

// C_PUSH argument 0 
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1

// C_POP static 0 
@0
D=A
@16
A=D+M
D=A
@R15
M=D
@SP
M=M-1
A=M
D=M
@R15
A=M
M=D

// C_PUSH argument 1 
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1

// C_POP static 1 
@1
D=A
@16
A=D+M
D=A
@R15
M=D
@SP
M=M-1
A=M
D=M
@R15
A=M
M=D

// C_PUSH constant 0 
@0
D=A
@SP
A=M
M=D
@SP
M=M+1

//return
@LCL
D=M
@R13
M=D
@5
D=A
@R13
D=M-D
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@1
D=A
@R13
D=M-D
A=D
D=M
@THAT
M=D
@2
D=A
@R13
D=M-D
A=D
D=M
@THIS
M=D
@3
D=A
@R13
D=M-D
A=D
D=M
@ARG
M=D
@4
D=A
@R13
D=M-D
A=D
D=M
@LCL
M=D
@R14
A=M
A=M
0;JMP

//function class2.get 0
(class2.get)
@0
D=A
@R14
M=D
(LOOP_class2.get)
@R14
D=M
@END_LOOP_class2.get
D;JLE
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R14
M=M-1 //n--
@LOOP_class2.get
0;JMP
(END_LOOP_class2.get)

// C_PUSH static 0 
@0
D=A
@16
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1

// C_PUSH static 1 
@1
D=A
@16
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1

// sub 
@SP
M=M-1
A=M
D=M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
D=D-M
@SP
A=M
M=D
@SP
M=M+1

//return
@LCL
D=M
@R13
M=D
@5
D=A
@R13
D=M-D
@R14
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@1
D=A
@R13
D=M-D
A=D
D=M
@THAT
M=D
@2
D=A
@R13
D=M-D
A=D
D=M
@THIS
M=D
@3
D=A
@R13
D=M-D
A=D
D=M
@ARG
M=D
@4
D=A
@R13
D=M-D
A=D
D=M
@LCL
M=D
@R14
A=M
A=M
0;JMP

//function sys.init 0
(sys.init)
@0
D=A
@R14
M=D
(LOOP_sys.init)
@R14
D=M
@END_LOOP_sys.init
D;JLE
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@R14
M=M-1 //n--
@LOOP_sys.init
0;JMP
(END_LOOP_sys.init)

// C_PUSH constant 6 
@6
D=A
@SP
A=M
M=D
@SP
M=M+1

// C_PUSH constant 8 
@8
D=A
@SP
A=M
M=D
@SP
M=M+1

//call class1.set 2
@class1.set$ret.1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@2
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@class1.set
0;JMP
(class1.set$ret.1)

// C_POP temp 0 
@0
D=A
@5
A=D+M
D=A
@R15
M=D
@SP
M=M-1
A=M
D=M
@R15
A=M
M=D

// C_PUSH constant 23 
@23
D=A
@SP
A=M
M=D
@SP
M=M+1

// C_PUSH constant 15 
@15
D=A
@SP
A=M
M=D
@SP
M=M+1

//call class2.set 2
@class2.set$ret.2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@2
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@class2.set
0;JMP
(class2.set$ret.2)

// C_POP temp 0 
@0
D=A
@5
A=D+M
D=A
@R15
M=D
@SP
M=M-1
A=M
D=M
@R15
A=M
M=D

//call class1.get 0
@class1.get$ret.3
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@0
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@class1.get
0;JMP
(class1.get$ret.3)

//call class2.get 0
@class2.get$ret.4
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@0
D=D+A
@SP
D=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
@class2.get
0;JMP
(class2.get$ret.4)

//label while
(Source.sys.init$while)

//goto while
@Source.sys.init$while
0;JMP

(INFINITE_LOOP)
@INFINITE_LOOP
0;JMP
